// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandaHR.Api.DAL.EF.Context;

namespace PandaHR.Api.DAL.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.CV", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QualificationId");

                    b.HasIndex("UserId");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("619619ff-8b86-d011-b42d-00cf4fc964ff"),
                            CountryId = new Guid("6f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("629619ff-8b86-d011-b42d-00cf4fc964ff"),
                            CountryId = new Guid("6f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("639619ff-8b86-d011-b42d-00cf4fc964ff"),
                            CountryId = new Guid("6f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Kyiv"
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.CompanyCity", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CompanyId", "CityId");

                    b.HasIndex("CityId");

                    b.ToTable("CompanyCities");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("7f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("8f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = new Guid("9f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Moldova"
                        },
                        new
                        {
                            Id = new Guid("0f9619ff-8b86-d011-b42d-00cf4fc964ff"),
                            IsDeleted = false,
                            Name = "Belarus"
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Degree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Degrees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07a37911-a33e-4248-b8e3-02495f3030d4"),
                            IsDeleted = false,
                            Name = "Specialist"
                        },
                        new
                        {
                            Id = new Guid("30d96e97-149f-4d6e-a398-2433b1a12cff"),
                            IsDeleted = false,
                            Name = "Barchelor"
                        },
                        new
                        {
                            Id = new Guid("8ff346e5-b5ae-4afa-bbc6-cb08d5e8cbd3"),
                            IsDeleted = false,
                            Name = "Master"
                        },
                        new
                        {
                            Id = new Guid("369c13f0-dbb1-4907-92b7-6d2afb0b5f95"),
                            IsDeleted = false,
                            Name = "Postgraduate"
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DegreeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SpecialityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("UserId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.JobExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CVId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("JobExperiences");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.KnowledgeLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KnowledgeLevels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b9be3ca-2c11-4afe-9c5f-225bbf192e81"),
                            IsDeleted = false,
                            Name = "Beginer",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("32832ec4-968b-4619-b8cb-af4e65c52a37"),
                            IsDeleted = false,
                            Name = "Lower Intermidiate",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("9b9be3ca-2c11-4afe-9c5f-225bbf192e31"),
                            IsDeleted = false,
                            Name = "Intermidiate",
                            Value = 3
                        },
                        new
                        {
                            Id = new Guid("9b9be3ca-9c11-4afe-9c5f-225bbf192e81"),
                            IsDeleted = false,
                            Name = "Upper Intermidiate",
                            Value = 4
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6015f293-a102-459b-9fa3-2ce7cc92c386"),
                            IsDeleted = false,
                            Name = "Trainee",
                            Value = 1
                        },
                        new
                        {
                            Id = new Guid("6331e0ea-9df6-4e20-9bed-b18382b180bd"),
                            IsDeleted = false,
                            Name = "Junior",
                            Value = 2
                        },
                        new
                        {
                            Id = new Guid("e2e061e1-201e-41f8-8fb8-1106b00f5ae7"),
                            IsDeleted = false,
                            Name = "Middle",
                            Value = 3
                        },
                        new
                        {
                            Id = new Guid("a76428b1-aac5-410b-af4f-811c9b474997"),
                            IsDeleted = false,
                            Name = "Senior",
                            Value = 4
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RootSkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RootSkillId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillKnowledge", b =>
                {
                    b.Property<Guid>("CVId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExperienceMonths")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("KnowledgeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CVId", "SkillId");

                    b.HasIndex("KnowledgeLevelId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillKnowledges");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillKnowledgeType", b =>
                {
                    b.Property<Guid>("SkillTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KnowledgeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillTypeId", "KnowledgeLevelId");

                    b.HasIndex("KnowledgeLevelId");

                    b.ToTable("SkillKnowledgeType");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillRequirement", b =>
                {
                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VacancyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExperienceMonths")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("KnowledgeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("SkillId", "VacancyId");

                    b.HasIndex("KnowledgeLevelId");

                    b.HasIndex("VacancyId");

                    b.ToTable("SkillRequirements");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillTypes");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Speciality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f98a7083-825c-496a-9112-ecd375a17dcb"),
                            IsDeleted = false,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = new Guid("3cceb22e-d32f-4a29-9c49-651b258c088d"),
                            IsDeleted = false,
                            Name = "System Analysis"
                        },
                        new
                        {
                            Id = new Guid("0d59cea4-85f5-4107-9d0f-8fecbe6a1933"),
                            IsDeleted = false,
                            Name = "Applied Math"
                        },
                        new
                        {
                            Id = new Guid("2b82ca8b-1047-4830-83d5-e1e716b4407f"),
                            IsDeleted = false,
                            Name = "Applied Physics"
                        },
                        new
                        {
                            Id = new Guid("3a4d31f3-c8ab-4f09-8fde-684af2890d69"),
                            IsDeleted = false,
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.UserCompany", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("UserCompanies");
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Vacancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.CV", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Qualification", "Qualification")
                        .WithMany("CVs")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.User", "User")
                        .WithMany("CVs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.City", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.CompanyCity", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.City", "City")
                        .WithMany("CompanyCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Company", "Company")
                        .WithMany("CompanyCities")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Education", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Degree", "Degree")
                        .WithMany("Educations")
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Speciality", "Speciality")
                        .WithMany("Educations")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.JobExperience", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.CV", "CV")
                        .WithMany("JobExperiences")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Skill", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Skill", "RootSkill")
                        .WithMany("SubSkills")
                        .HasForeignKey("RootSkillId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.SkillType", "SkillType")
                        .WithMany("Skills")
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillKnowledge", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.CV", "CV")
                        .WithMany("SkillKnowledges")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.KnowledgeLevel", "KnowledgeLevel")
                        .WithMany("SkillKnowledges")
                        .HasForeignKey("KnowledgeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Skill", "Skill")
                        .WithMany("SkillKnowledges")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillKnowledgeType", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.KnowledgeLevel", "KnowledgeLevel")
                        .WithMany("SkillKnowledgeTypes")
                        .HasForeignKey("KnowledgeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.SkillType", "SkillType")
                        .WithMany("SkillKnowledgeTypes")
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.SkillRequirement", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.KnowledgeLevel", "KnowledgeLevel")
                        .WithMany("SkillRequirements")
                        .HasForeignKey("KnowledgeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Skill", "Skill")
                        .WithMany("SkillRequirements")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Vacancy", "Vacancy")
                        .WithMany("SkillRequirements")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.User", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.UserCompany", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Company", "Company")
                        .WithMany("UserCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.User", "User")
                        .WithMany("UserCompanies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaHR.Api.DAL.Models.Entities.Vacancy", b =>
                {
                    b.HasOne("PandaHR.Api.DAL.Models.Entities.City", "City")
                        .WithMany("Vacancies")
                        .HasForeignKey("CityId");

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Company", "Company")
                        .WithMany("Vacancies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.Qualification", "Qualification")
                        .WithMany("Vacancies")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaHR.Api.DAL.Models.Entities.User", "User")
                        .WithMany("Vacancies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
